<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="false">

	<description>Spring配置</description>

	<!--读取系统定义properties文件 -->  
    <bean id="propertyConfigurer" class="com.xdtech.core.config.PropertiesConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.xdtech">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<!-- 排除Jersey服务Component注解 -->
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Component"/> -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
	<!-- 扫描系统模块 -->

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.xdtech.**.model</value>
				<!-- 系统模块 -->
<!-- 				<value>com.xdtech.sys.model</value> -->
				<!-- 基础数据 -->
<!-- 				<value>com.xdtech.base.model</value> -->
				<!-- 教务模块 -->
<!-- 				<value>com.xdtech.edu.model</value> -->
				<!-- 学籍模块 -->
<!-- 				<value>com.xdtech.stu.model</value> -->
			</list>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!--         <tx:attributes> -->
<!--             <tx:method name="*" propagation="REQUIRED"/> -->
<!--         </tx:attributes> -->
<!--     </tx:advice> -->

<!--     <aop:config expose-proxy="true" proxy-target-class="true"> -->
<!--         只对业务逻辑层实施事务 -->
<!--         <aop:pointcut id="txPointcut" expression="execution(* com.xdtech..service..*+.*(..))"/> -->
<!--         <aop:advisor id="txAdvisor" advice-ref="txAdvice" pointcut-ref="txPointcut"/> -->
<!--     </aop:config> -->
	
	<!-- ApplicationContext配置spring上下文 -->
	<bean class="com.xdtech.common.utils.ApplicationContextUtil"></bean>

	<!-- 加入Aspectj配置 -->
	<aop:aspectj-autoproxy />
	<!-- log日志切面 -->
	<bean id="logAspect" class="com.xdtech.sys.aspect.LogAspect" />



	<!-- 加载动态sql文件 -->
	<bean id="dynamicStatementBuilder" class="com.xdtech.core.dao.dynamic.DefaultDynamicHibernateStatementBuilder">
		<property name="fileNames">
			<list>
				<value>classpath*:com/xdtech/**/*-sql.xml</value>
			</list>
		</property>
	</bean>

	<import resource="applicationContext-shiro.xml" />
	
	
  
</beans>